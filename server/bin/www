#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app');
const http = require('http');
const chalk = require('chalk');

/**
 * Normalize a port into a number, string, or false.
 */
const normalizePort = val => {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
};

/**
 * Listen on provided port, on all network interfaces.
 */

/**
 * Get port from environment and store in Express.
 */
const port = normalizePort(process.env.PORT || '80');

/**
 * Event listener for HTTP server "listening" event.
 */
const onListening = () => {
  console.log(chalk.green(`-- vue ssr server listen --    http://localhost:${port}`))
};

/**
 * Event listener for HTTP server "error" event.
 */
const onError = error => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
};

/**
 * Create HTTP server.
 */
const server = http.createServer(app);

app.set('port', port);
server.listen(port);
server.on('listening', onListening);
server.on('error', onError);


